plugins {
  id 'fabric-loom' version '0.1.0-SNAPSHOT'
}

def mod_file = getModFile()
version = getModField("VERSION", mod_file)
group = "net.gegy1000"
archivesBaseName = "terrarium"
sourceCompatibility = targetCompatibility = "1.8"

minecraft {
}

repositories {
  mavenCentral()
  mavenLocal()
  jcenter()
  maven {
    url = "http://mvn.topobyte.de"
  }
  maven {
    url = "https://maven.gegy1000.net"
  }
}

configurations {
  embed
  compile.extendsFrom(embed)
}

dependencies {
  minecraft "com.mojang:minecraft:18w50a"
  mappings "net.fabricmc:yarn:18w50a.73"

  compile 'com.google.code.findbugs:jsr305:3.0.2'

  modCompile "net.fabricmc:fabric-loader:0.3.0.77"
  modCompile "net.fabricmc:fabric:0.1.1.47"

  embed('de.topobyte:osm4j-core-mc:0.1.0') {
    exclude group: 'it.unimi.dsi', module: 'fastutil'
    exclude group: 'org.apache.commons'
    exclude group: 'org.apache.logging.log4j'
  }
  // TODO: We need to completely remove trove dependency!
  embed('de.topobyte:osm4j-utils-mc:0.1.2') {
    exclude group: 'it.unimi.dsi', module: 'fastutil'
    exclude group: 'org.apache.commons'
    exclude group: 'commons-cli'
    exclude group: 'com.google.protobuf'
    exclude group: 'com.google.guava'
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
//    exclude group: 'net.sf.trove4j'
  }
  embed 'org.tukaani:xz-fork:1.8'
}

jar {
  from configurations.embed.collect {
    exclude 'META-INF/'
    it.isDirectory() ? it : zipTree(it)
  }
}

// TODO
String getModFile() {
  String path = ""
  FileTree tree = fileTree(dir: 'src/main/java')
  tree.include '**/*.java'
  tree.visit { element ->
    if (element.file.isFile()) {
      element.file.eachLine { String s ->
        s = s.trim()
        if (s.startsWith("@Mod")) {
          path = "src/main/java/$element.relativePath"
        }
      }
    }
  }
  return path
}

String getModField(String type, String mod_file) {
  if (mod_file.length() == 0) {
    return ""
  }
  String field = ""
  String prefix = "public static final String $type = \""
  File file = file(mod_file)
  file.eachLine { String s ->
    s = s.trim()
    if (s.startsWith(prefix)) {
      s = s.substring(prefix.length(), s.length() - 2)
      field = s
    }
  }
  return field
}
